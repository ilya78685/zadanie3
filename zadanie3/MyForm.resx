<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>